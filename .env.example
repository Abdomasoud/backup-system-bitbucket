# Bitbucket Migration System Configuration - Dual Account Support

# SOURCE ACCOUNT (Account to migrate FROM)
SOURCE_ATLASSIAN_EMAIL=source-account@domain.com
SOURCE_BITBUCKET_API_TOKEN=source-account-api-token
SOURCE_BITBUCKET_USERNAME=source-bitbucket-username  
SOURCE_BITBUCKET_WORKSPACES=workspace1,workspace2,workspace3  # Comma-separated list

# DESTINATION ACCOUNT (Account to migrate TO)
DEST_ATLASSIAN_EMAIL=destination-account@domain.com
DEST_BITBUCKET_API_TOKEN=destination-account-api-token
DEST_BITBUCKET_USERNAME=destination-bitbucket-username
DEST_BITBUCKET_WORKSPACES=new-workspace1,new-workspace2,new-workspace3  # Comma-separated list

# WORKSPACE MAPPING (Optional - for custom mapping)
# Format: source-workspace:destination-workspace,source2:dest2
WORKSPACE_MAPPING=oldcompany:newcompany,dev-team:newdev,staging:newstaging

# Migration Configuration
MIGRATION_MODE=true                     # Enable migration mode (creates repos in destination)
MULTI_WORKSPACE_MODE=true              # Enable multi-workspace migration
PRESERVE_REPO_NAMES=true               # Keep original repo names (true) or add prefix (false)
REPO_NAME_PREFIX=""                    # Optional prefix for migrated repos (e.g., "migrated-")
WORKSPACE_NAME_PREFIX=""               # Optional prefix for workspace names in destination
SKIP_EXISTING_REPOS=true               # Skip repos that already exist in destination
SKIP_EXISTING_WORKSPACES=true          # Skip workspaces that already exist in destination
MIGRATION_BATCH_SIZE=5                 # Number of repos to migrate simultaneously
CREATE_MISSING_WORKSPACES=true         # Auto-create destination workspaces if they don't exist

# Backup Configuration (Local Server Backup)
BACKUP_BASE_DIR=/opt/bitbucket-backup
MAX_BACKUPS=5
BACKUP_INTERVAL_DAYS=3

# Performance Settings
PARALLEL_JOBS=3                        # Increased for migration efficiency
COMPRESS_LEVEL=6
CLONE_TIMEOUT=1800                     # 30 minutes timeout for large repos
PUSH_TIMEOUT=3600                      # 60 minutes timeout for large pushes

# ========== COLLABORATION DATA RESTORATION ==========
# Control which types of collaboration data to restore in destination repos

# Issues & Comments
RESTORE_ISSUES=true                    # Recreate issues with comments in destination repos
RESTORE_PRS=false                      # Create PR documentation (PRs can't be fully recreated)
RESTORE_WIKI=true                      # Recreate wiki pages in destination repos

# Repository Settings (requires admin permissions)
RESTORE_PERMISSIONS=false              # Restore user/team permissions (requires user mapping)
RESTORE_BRANCH_RESTRICTIONS=false     # Restore branch protection rules
RESTORE_WEBHOOKS=false                 # Recreate webhooks in destination repos
RESTORE_DEPLOY_KEYS=false             # Create documentation for deploy keys (manual action needed)

# User Account Mapping (JSON format for cross-account migrations)
# Maps source account usernames to destination account usernames
# Format: {"source_user1": "dest_user1", "source_user2": "dest_user2"}
USER_MAPPING='{"john.doe": "j.doe", "jane.smith": "jane.s"}'

# ========== AUTO-DISCOVERY CONFIGURATION ==========
# Automatically discover ALL workspaces and repositories in source account

# Enable complete auto-discovery (overrides manual workspace configuration)
AUTO_DISCOVER_ALL=true                 # true = discover everything, false = use manual config

# Workspace filtering (comma-separated patterns)
WORKSPACE_INCLUDE_PATTERNS=""          # Only include workspaces matching these patterns
WORKSPACE_EXCLUDE_PATTERNS="test,temp,archived"  # Exclude workspaces matching these patterns

# Repository filtering (comma-separated patterns)  
REPO_INCLUDE_PATTERNS=""               # Only include repos matching these patterns
REPO_EXCLUDE_PATTERNS="test-,demo-,archived-"    # Exclude repos matching these patterns

# Safety limits
AUTO_DISCOVERY_MAX_REPOS=1000          # Maximum repositories to process (safety limit)

# Examples:
# WORKSPACE_INCLUDE_PATTERNS="company,prod"     # Only migrate workspaces with "company" or "prod" in name
# WORKSPACE_EXCLUDE_PATTERNS="test,dev"        # Skip workspaces with "test" or "dev" in name
# REPO_INCLUDE_PATTERNS="api-,web-"           # Only migrate repos starting with "api-" or "web-"
# REPO_EXCLUDE_PATTERNS="temp,demo"           # Skip repos containing "temp" or "demo"

# Logging Configuration
LOG_LEVEL=INFO
MIGRATION_LOG_ENABLED=true             # Enable detailed migration logging

# Email Notification Configuration (Optional)
EMAIL_NOTIFICATIONS=false
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
EMAIL_USERNAME=your-email@gmail.com
EMAIL_PASSWORD=your-app-password
NOTIFICATION_EMAIL=admin@your-domain.com
EMAIL_FROM=backup-system@your-domain.com
TEMP_CLEANUP=true

# How to get your API token:
# 1. Go to https://bitbucket.org/account/settings/app-passwords/
# 2. Click "Create app password"
# 3. Name: "Backup System"
# 4. Permissions: Repositories (Read, Write, Admin)
# 5. Copy the generated token and use it above

# Directory Structure will be:
# /opt/bitbucket-backup/
# ├── repositories/
# │   ├── repo1/
# │   │   ├── 20241002_120000.tar.gz
# │   │   ├── 20241005_120000.tar.gz
# │   │   └── ... (up to 5 backups)
# │   └── repo2/
# ├── metadata/
# └── logs/